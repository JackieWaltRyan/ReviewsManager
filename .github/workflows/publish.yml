name: Plugin-publish

on: [push, workflow_dispatch]

env:
  CONFIGURATION: Release
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true
  DOTNET_SDK_VERSION: 9.0

permissions:
  contents: read

jobs:
  publish:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    outputs:
      PLUGIN_NAME: ${{ steps.plugin-name.outputs.info }}
      PLUGIN_VERSION: ${{ steps.plugin-version.outputs.info }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4.2.2
      with:
        show-progress: false
        submodules: recursive

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4.3.1
      with:
        dotnet-version: ${{ env.DOTNET_SDK_VERSION }}

    - name: Verify .NET Core
      run: dotnet --info

    - name: Parse plugin name from Directory.Build.props
      id: plugin-name
      uses: mavrosxristoforos/get-xml-info@2.0
      with:
        xml-file: 'Directory.Build.props'
        xpath: '//PluginName'

    - name: Parse plugin version from Directory.Build.props
      id: plugin-version
      uses: mavrosxristoforos/get-xml-info@2.0
      with:
        xml-file: 'Directory.Build.props'
        xpath: '//Version'

    - name: Publish plugin on Unix
      if: startsWith(matrix.os, 'ubuntu-')
      env:
        PLUGIN_NAME: ${{ steps.plugin-name.outputs.info }}
      shell: sh
      run: |
        set -eu

        dotnet publish "$PLUGIN_NAME" -c "$CONFIGURATION" -o "out/plugin/${PLUGIN_NAME}" -p:ContinuousIntegrationBuild=true -p:TargetLatestRuntimePatch=false -p:UseAppHost=false --nologo

        seven_zip_args="-mx=9 -mfb=258 -mpass=15"
        zip_args="-9"

        # Create the final zip file
        case "$(uname -s)" in
            "Darwin")
                # We prefer to use zip on OS X as 7z implementation on that OS doesn't handle file permissions (chmod +x)
                if command -v zip >/dev/null; then
                    (
                        cd "${GITHUB_WORKSPACE}/out/plugin/${PLUGIN_NAME}"
                        zip -q -r $zip_args "../../${PLUGIN_NAME}.zip" .
                    )
                else
                    7z a -bd -slp -tzip -mm=Deflate $seven_zip_args "out/${PLUGIN_NAME}.zip" "${GITHUB_WORKSPACE}/out/plugin/${PLUGIN_NAME}/*"
                fi
                ;;
            *)
                if command -v 7z >/dev/null; then
                    7z a -bd -slp -tzip -mm=Deflate $seven_zip_args "out/${PLUGIN_NAME}.zip" "${GITHUB_WORKSPACE}/out/plugin/${PLUGIN_NAME}/*"
                else
                    (
                        cd "${GITHUB_WORKSPACE}/out/plugin/${PLUGIN_NAME}"
                        zip -q -r $zip_args "../../${PLUGIN_NAME}.zip" .
                    )
                fi
                ;;
        esac

    - name: Upload plugin artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        if-no-files-found: error
        name: ${{ matrix.os }}_${{ steps.plugin-name.outputs.info }}
        path: out/${{ steps.plugin-name.outputs.info }}.zip

  release:
    needs: publish
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4.2.2
      with:
        show-progress: false

    - name: Download plugin artifact from ubuntu-latest
      uses: actions/download-artifact@v4.3.0
      with:
        name: ubuntu-latest_${{ needs.publish.outputs.PLUGIN_NAME }}
        path: out

    - name: Create GitHub release
      uses: ncipollo/release-action@v1.16.0
      with:
        allowUpdates: true
        artifactErrorsFailBuild: true
        omitBody: true
        omitBodyDuringUpdate: true
        tag: ${{ needs.publish.outputs.PLUGIN_VERSION }}
        name: ${{ needs.publish.outputs.PLUGIN_NAME }} v${{ needs.publish.outputs.PLUGIN_VERSION }}
        artifacts: "out/*"
